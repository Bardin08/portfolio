name: Cliply API Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Target environment for the deployment
        required: true
        type: choice
        options:
          - dev
      version:
        description: Application version to deploy
        required: true
        type: string

env:
  GHCR_REGISTRY: ghcr.io/bardin08
  GHCR_REPOSITORY: portfolio-api
  API_CONTAINER_PORT: 9817

jobs:
  deployment:
    runs-on: ubuntu-latest
    permissions: write-all
    environment: ${{ inputs.environment }}
    steps:
      - name: Deploy to Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          passphrase: ${{ secrets.DROPLET_SSH_KEY_PASSPHRASE }}
          script: |
            docker pull ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPOSITORY }}:${{ inputs.version }}
            docker stop ${{ env.GHCR_REPOSITORY }} || true
            docker rm ${{ env.GHCR_REPOSITORY }} || true
            docker run -d -p ${{ env.API_CONTAINER_PORT }}:8080 --name ${{ env.GHCR_REPOSITORY }} \
              -e SWAGGER_ENABLED="${{ vars.SWAGGER_ENABLED }}" \
              -e EmailAccount__AdminEmail="${{ vars.ADMIN_EMAIL }}" \
              -e EmailAccount__SenderName="${{ vars.SENDER_NAME }}" \
              -e EmailAccount__BookMeLink="${{ vars.BOOK_ME_LINK }}" \
              -e EmailAccount__AppPassword="${{ secrets.EMAIL_APP_PASSWORD }}" \
              -e EmailAccount__AppPassword="${{ secrets.MongoDb__ConnectionString }}" \
              ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPOSITORY }}:${{ inputs.version }}
